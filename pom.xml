<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.blefuscu</groupId>
	<artifactId>apt-subscriptions</artifactId>
	<version>1.0-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>apt-subscriptions</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<junit.version>4.13.2</junit.version>
		<assertj-swing-junit.version>3.17.1</assertj-swing-junit.version>
		<mockito.version>4.11.0</mockito.version>
		<jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
		<pitest-maven.version>1.5.2</pitest-maven.version>
		<coveralls-maven-plugin.version>4.5.0-M6</coveralls-maven-plugin.version>
		<sonar.organization>mfflnz</sonar.organization>
		<docker-maven-plugin.version>0.45.1</docker-maven-plugin.version>
		<mongo-java-driver.version>3.12.10</mongo-java-driver.version>
		<logback-classic.version>1.2.13</logback-classic.version>
		<mongo-java-server.version>1.34.0</mongo-java-server.version>
		<build-helper.version>3.6.0</build-helper.version>
		<maven-failsafe.version>3.5.2</maven-failsafe.version>
		<assetshost>./assets</assetshost>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>${assertj-swing-junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>${mongo-java-driver.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-classic.version}</version>
		</dependency>
		<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo-java-server.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Build Helper per aggiungere la cartella degli IT -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper.version}</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Failsafe per gli IT -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.5.2</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Docker -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker-maven-plugin.version}</version>
				<configuration>
					<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
					<images>
						<!-- MongoDB: server -->
						<image>
							<name>mongo:5</name>
							<alias>mongod</alias>
							<run>
								<ports>
									<port>27017:27017</port>
								</ports>
								<network>
									<mode>custom</mode>
									<name>apt-network</name>
									<alias>mongodb</alias>
								</network>
								<log>
									<!-- %a Ã¨ l'alias dell'immagine -->
									<prefix>%a</prefix>
									<date>default</date>
									<color>cyan</color>
								</log>
								<!-- "mongod":  -->
								<containerNamePattern>%a</containerNamePattern>
							</run>
						</image>
						<!-- MongoDB: client per importare i dati -->
						<image>
							<name>mongo:5</name>
							<alias>mongoimport</alias>
							<run>
								<network>
									<mode>custom</mode>
									<name>apt-network</name>
									<alias>mongodb</alias>
								</network>
								<volumes>
									<bind>
										<volume>assets</volume>
										<volume>${assetshost}:/assets:rw</volume>
									</bind>
								</volumes>
								<cmd>mongoimport --host mongod
									--collection='orders' --headerline
									--file=assets/sample-orders.csv --type=csv</cmd>
								<log>
									<prefix>%a</prefix>
									<date>default</date>
									<color>yellow</color>
								</log>
							</run>
						</image>
					</images>
				</configuration>
				<executions>
					<execution>
						<id>docker-start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<execution>
						<id>docker-stop</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!-- JaCoCo -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/model/*.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<!-- fase initialize -->
								<goal>prepare-agent</goal>
								<!-- fase verify -->
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-check</id>
							<goals>
								<!-- fase verify -->
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>PACKAGE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>1.00</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Pitest -->
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>${pitest-maven.version}</version>
					<configuration>
						<targetClasses>
							<param>org.blefuscu.apt.subscriptions.view.*</param>
							<param>org.blefuscu.apt.subscriptions.controller.*</param>
							<param>org.blefuscu.apt.subscriptions.repository.*</param>
						</targetClasses>
						<targetTests>
							<param>org.blefuscu.apt.subscriptions.*</param>
						</targetTests>
						<mutators>
							<mutator>STRONGER</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
					</configuration>
				</plugin>
				<!-- Coveralls -->
				<plugin>
					<groupId>com.github.hazendaz.maven</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>${coveralls-maven-plugin.version}</version>
					<configuration>
						<repoToken>${env.COVERALLS_REPO_TOKEN}</repoToken>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation-testing</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>